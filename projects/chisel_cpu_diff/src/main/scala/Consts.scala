import chisel3._
import chisel3.util._

trait ID_Consts{
    val Y = true.B
    val N = false.B

    val SEL_ID_OUT1_WIDTH = 2
    val OUT1_X      = "b00".U(SEL_ID_OUT1_WIDTH.W)
    val OUT1_RS1    = "b01".U(SEL_ID_OUT1_WIDTH.W)
    val OUT1_PC     = "b10".U(SEL_ID_OUT1_WIDTH.W)

    val SEL_ID_OUT2_WIDTH = 2
    val OUT2_X      = "b00".U(SEL_ID_OUT2_WIDTH.W)
    val OUT2_RS2    = "b01".U(SEL_ID_OUT2_WIDTH.W)
    val OUT2_IMM    = "b10".U(SEL_ID_OUT2_WIDTH.W)

    val SEL_ID_IMM_WIDTH = 5
    val ID_IMM_X    = "b00000".U(SEL_ID_IMM_WIDTH.W)
    val ID_IMM_I    = "b00001".U(SEL_ID_IMM_WIDTH.W)
    val ID_IMM_S    = "b00010".U(SEL_ID_IMM_WIDTH.W)
    val ID_IMM_B    = "b00100".U(SEL_ID_IMM_WIDTH.W)
    val ID_IMM_U    = "b01000".U(SEL_ID_IMM_WIDTH.W)
    val ID_IMM_J    = "b10000".U(SEL_ID_IMM_WIDTH.W)

    val SEL_IF_NEXTPC_WIDTH = 1
    val IF_NEXTPC_ADD4 = "b0".U(SEL_IF_NEXTPC_WIDTH.W)
    val IF_NEXTPC_JUMP = "b1".U(SEL_IF_NEXTPC_WIDTH.W)

    val SEL_ALU_OPCODE_WIDTH = 10
    val ALU_OPCODE_X    = "b0000000000".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_ADD  = "b0000000001".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_SLT  = "b0000000010".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_SLTU = "b0000000100".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_AND  = "b0000001000".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_OR   = "b0000010000".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_XOR  = "b0000100000".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_SLL  = "b0001000000".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_SRL  = "b0010000000".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_SRA  = "b0100000000".U(SEL_ALU_OPCODE_WIDTH.W)
    val ALU_OPCODE_LUI  = "b1000000000".U(SEL_ALU_OPCODE_WIDTH.W)

    val SEL_ISU_OUT_WIDTH = 2
    val ISU_OUT_X    = "b00".U(SEL_ISU_OUT_WIDTH.W)
    val ISU_OUT_ALU  = "b01".U(SEL_ISU_OUT_WIDTH.W)
    val ISU_OUT_DRAM = "b10".U(SEL_ISU_OUT_WIDTH.W)

    
}